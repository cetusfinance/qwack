name: Qwack Main Build

on:
  workflow_dispatch:

jobs:
  build_and_deploy_job:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout code'
      uses: actions/checkout@main
      with:
        submodules: 'true'
    
    - name: 'Set environment var'
      run: VERSION=$(cat ./version.txt) && echo "version=$VERSION" >> $GITHUB_ENV
    - name: 'Check environment var'
      run: echo "${{ env.version}}"

    - name: Restore DotNet
      run: dotnet restore
      working-directory: '.'
    
    - name: Pack Dates
      run: dotnet pack --configuration Release /p:Version=${VERSION} --output .
      working-directory: './src/Qwack.Dates'
      env:
        VERSION: ${{ env.version }}

    - name: Pack Core
      run: dotnet pack --configuration Release /p:Version=${VERSION} --output .
      working-directory: './src/Qwack.Core'
      env:
        VERSION: ${{ env.version }}

    - name: Pack Math
      run: dotnet pack --configuration Release /p:Version=${VERSION} --output .
      working-directory: './src/Qwack.Math'
      env:
        VERSION: ${{ env.version }}

    - name: Pack Interpolation
      run: dotnet pack --configuration Release /p:Version=${VERSION} --output .
      working-directory: './src/Qwack.Math.Interpolation'
      env:
        VERSION: ${{ env.version }}

    - name: Pack Options
      run: dotnet pack --configuration Release /p:Version=${VERSION} --output .
      working-directory: './src/Qwack.Options'
      env:
        VERSION: ${{ env.version }}

    - name: Pack Paths
      run: dotnet pack --configuration Release /p:Version=${VERSION} --output .
      working-directory: './src/Qwack.Paths'
      env:
        VERSION: ${{ env.version }}

    - name: Pack Providers
      run: dotnet pack --configuration Release /p:Version=${VERSION} --output .
      working-directory: './src/Qwack.Providers'
      env:
        VERSION: ${{ env.version }}

    - name: Pack Transport
      run: dotnet pack --configuration Release /p:Version=${VERSION} --output .
      working-directory: './src/Qwack.Transport'
      env:
        VERSION: ${{ env.version }}

    - name: Pack Futures
      run: dotnet pack --configuration Release /p:Version=${VERSION} --output .
      working-directory: './src/Qwack.Futures'
      env:
        VERSION: ${{ env.version }}

    - name: Pack Models
      run: dotnet pack --configuration Release /p:Version=${VERSION} --output .
      working-directory: './src/Qwack.Models'
      env:
        VERSION: ${{ env.version }}  

    - name: Pack Utils
      run: dotnet pack --configuration Release /p:Version=${VERSION} --output .
      working-directory: './src/Qwack.Utils'
      env:
        VERSION: ${{ env.version }}  

    - name: Pack Random
      run: dotnet pack --configuration Release /p:Version=${VERSION} --output .
      working-directory: './src/Qwack.Random'
      env:
        VERSION: ${{ env.version }}  

    - name: Pack Storage
      run: dotnet pack --configuration Release /p:Version=${VERSION} --output .
      working-directory: './src/Qwack.Storage'
      env:
        VERSION: ${{ env.version }}  

    - name: Pack Serialization
      run: dotnet pack --configuration Release /p:Version=${VERSION} --output .
      working-directory: './src/Qwack.Serialization'
      env:
        VERSION: ${{ env.version }}  

    - name: Push
      run: |
        dotnet nuget push ./Qwack.Dates/Qwack.Dates.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_APIKEY} --skip-duplicate
        dotnet nuget push ./Qwack.Core/Qwack.Core.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_APIKEY} --skip-duplicate
        dotnet nuget push ./Qwack.Math/Qwack.Math.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_APIKEY} --skip-duplicate
        dotnet nuget push ./Qwack.Math.Interpolation/Qwack.Math.Interpolation.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_APIKEY} --skip-duplicate
        dotnet nuget push ./Qwack.Options/Qwack.Options.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_APIKEY} --skip-duplicate
        dotnet nuget push ./Qwack.Paths/Qwack.Paths.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_APIKEY} --skip-duplicate
        dotnet nuget push ./Qwack.Models/Qwack.Models.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_APIKEY} --skip-duplicate
        dotnet nuget push ./Qwack.Random/Qwack.Random.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_APIKEY} --skip-duplicate
        dotnet nuget push ./Qwack.Providers/Qwack.Providers.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_APIKEY} --skip-duplicate
        dotnet nuget push ./Qwack.Utils/Qwack.Utils.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_APIKEY} --skip-duplicate
        dotnet nuget push ./Qwack.Futures/Qwack.Futures.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_APIKEY} --skip-duplicate
        dotnet nuget push ./Qwack.Transport/Qwack.Transport.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_APIKEY} --skip-duplicate
        dotnet nuget push ./Qwack.Storage/Qwack.Storage.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_APIKEY} --skip-duplicate
        dotnet nuget push ./Qwack.Serialization/Qwack.Serialization.${VERSION}.nupkg --source https://api.nuget.org/v3/index.json --api-key ${NUGET_APIKEY} --skip-duplicate
      working-directory: './src/'
      env:
        NUGET_APIKEY: ${{ secrets.NUGET_APIKEY }}
        VERSION: ${{ env.version }}

